오늘의 주제: 파일 권한

ls -l
파일 권한과 관련 부분!


-		(파일의 종류(-일반파일 d디렉터리)
rw-r--r--.		파일 권한
1		하드 링크 개수 (동일한 파일 여러개의 이름)
user1		파일 소유자
user1		파일이 속한 그룹
93		파일 크기
Sep 10 19:47	마지막 수정 날짜
err.txt

groups [이름]
- 모든 계정은 그룹 가진다
- 프로그래머, QA, 아트, 사업

소유자	그룹	나머지(소유자도 그룹도 아닌 계정)
rw-  	 rw- 	 r--

일반 파일
- r (read) 읽기 권한
- w (write) 쓰기 권한
- x (execute) 실행 권한
- - 없음

디렉터리
- r (read) 디렉터리에서 목록 조회 (ls)
- w (write) 디렉터리 안에서 파일 생성/삭제 가능
- x (execute) cd 명령. 파일을 디렉터리로 이동/복사
- - 없음

접근 권한 변경
- 파일의 소유자 / root (관리자) 계정만 변경 가능
chmod (change mode)
- 기호
- 숫자

기호 방식
- 사용자 u(user) g(group) o(other) a(all)
- 연산자 (+부여 -제거 =설정)
- 접근 권한 (rwx)
chmod u- r test.txt (test.txt 파일의 읽기 권한을 user에게서 제거한다)
chmod u+x,go+w test.txt 

숫자 방식
 - r(4) w(2) x(1)
 rwx = 4+2+1 = 7
 r-- = 4+0+0 = 4
 --- = 0+0+0 = 0
 chmod 7 test.txt = chmod 007 test.txt

rwx rwx rwx = 777 (최대 권한)
rw- rw- rw- = 666 (일반 파일 최대 권한)

기본 권한
umask (제거할 권한을 표시)
umask -S (적용될 권한을 표시)

666 = rw- rw- rw-
002 = --- --- -w-
----------------------
rw- rw- r--

umask 077

666 = rw- rw- rw-
077 = --- rwx rwx

rw- --- ---

특수 접근 권한 설정

- SetUID(s)   4 (실행 도중에는 실행한 사용자가 아닌, 파일 소유자의 권한 적용)
- SetGID   2 (실행 도중에는 실행한 사용자가 아닌, 파일 그룹 권한 적용)
- StickyBit(t) 1
	- 디렉터리 전용
	- 해당 디렉터리에는 누구나 파일 생성 가능
	- 파일은 파일 생성자의 소유
	- 다른 사용자는 파일 삭제 불가

