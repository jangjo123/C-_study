// <auto-generated />
using System;
using MMO_EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MMO_EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230711072534_HelloMigration")]
    partial class HelloMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MMO_EFCore.Guild", b =>
                {
                    b.Property<int>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuildId");

                    b.ToTable("Guild");
                });

            modelBuilder.Entity("MMO_EFCore.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Item");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("MMO_EFCore.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GuildId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("PlayerId");

                    b.HasIndex("GuildId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("Index_Person_Name");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("MMO_EFCore.EventItem", b =>
                {
                    b.HasBaseType("MMO_EFCore.Item");

                    b.Property<DateTime>("DestroyDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Item");

                    b.HasDiscriminator().HasValue("EventItem");
                });

            modelBuilder.Entity("MMO_EFCore.Item", b =>
                {
                    b.HasOne("MMO_EFCore.Player", "Owner")
                        .WithOne("OwnedItem")
                        .HasForeignKey("MMO_EFCore.Item", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MMO_EFCore.Player", b =>
                {
                    b.HasOne("MMO_EFCore.Guild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId");
                });
#pragma warning restore 612, 618
        }
    }
}
